plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.dagger.hilt.android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
}

android {
    namespace 'com.example.data'
    compileSdk project.compileSdkVersion

    defaultConfig {
        minSdk project.minSdkVersion
        targetSdk project.compileSdkVersion

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = project.jvmTargetVersion
    }
}

dependencies {

    implementation "androidx.core:core-ktx:$androidxCoreVersion"
    implementation "androidx.appcompat:appcompat:$androidxAppCompat"
    implementation "com.google.android.material:material:$materialVersion"
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$testExtJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$testEspressoVersion"

    // Networking
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"

    // DI
    implementation "com.google.dagger:hilt-android:$hiltVersion"
    kapt("com.google.dagger:hilt-android-compiler:$hiltVersion")

    // Gson
    implementation "com.google.code.gson:gson:$gsonVersion"

    // Room
    implementation("androidx.room:room-runtime:$roomVersion")
    annotationProcessor("androidx.room:room-compiler:$roomVersion")
    kapt("androidx.room:room-compiler:$roomVersion")
    implementation("androidx.room:room-ktx:$roomVersion")
}

// Allow references to generated code (for hilt)
kapt {
    correctErrorTypes = true
}